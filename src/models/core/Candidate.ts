import { IUnfilledAtt, Optional } from '@utils/base/base.interface';
import {
   Column, Model, Table,
} from 'sequelize-typescript';

interface IRelation<T = 'attributes'> {

}

/**
   * auto generated attributes, cause of that removed from iModelCreate
 */
interface IAutoGeneratedAttr {
  id: number;
}

interface INullableAttr extends IUnfilledAtt, IRelation {
}

export interface IModel extends
  Optional<INullableAttr>,
  IAutoGeneratedAttr {
  name: string;
  company: string;
  owner: number;
}

export type IModelCreate = Omit<IModel, keyof IAutoGeneratedAttr | keyof IRelation>
& Partial<IAutoGeneratedAttr>
& Partial<IRelation<'creation'>>;

@Table({
  tableName: 'candidate',
  paranoid: true,
  indexes: [{ fields: ['owner'] }],
})
export class Candidate extends Model<IModel, IModelCreate> implements IModel {
  declare id: number;

  @Column
  declare name: string;
  @Column
  declare company: string;
  @Column
  declare owner: number;

}
